h1{
    background-color: aqua;
    border-width: 2px;
    border-style: solid;
    border-color: black;
    padding: 15px;
}

ol{
    background-color: bisque;
    border: 15px chartreuse solid;
}

h2{
    background-color: aquamarine;
    width: 50vw;    /*here width & height are for the content not for the border or margin or padding. */
    height: 50vh;
    padding: 15px;
    border-style: solid;  
    border-width: 30px;
    border-color: rgb(48, 89, 6);
    border-radius: 25px;              /*border-radius will make the edges/corners as round insted of sharp turns */

    /*shortcuts */
    border: 30px rgb(10, 34, 5) solid;   /* this is known as short hand notation , there is no need of writing the color, style, width separately, we can write them in single line.*/
}

h3{
    border-left-width: 10px;     /* here the border will be given to the content from leftside only as 10px.  */
    border-left-color: black;
    border-left-style: solid; 
}

h4{
    background-color: chartreuse;
    color: black;
    width: 200px;
    height: 100px;
    border-style: solid;
    border-width: 10px 20px;   /* here when there are two values in border width, then first value will be allocated to the top & bottom
                                and second value will be allocated to the left & right . If there are three values , then first value is 
                                allocated to the top and last value is allocated to the bottom and second value will be allocated to 
                                left & right . if there are 4 values in border-width, the first value goes to top and second value goes to 
                                the right and third value goes to the bottom and last value goes to the left. */
    
                                
    padding: 15px 20px;         /*here also same thing will be happened just like border-width. if one value is there , then it will be allocated 
                                 to all four directions. if there are two values ,  then first value will be allocated to the top & bottom
                                and second value will be allocated to the left & right . If there are three values , then first value is 
                                allocated to the top and last value is allocated to the bottom and second value will be allocated to 
                                left & right . if there are 4 values in border-width, the first value goes to top and second value goes to 
                                the right and third value goes to the bottom and last value goes to the left. we can give padding in specific 
                                direction by selecting the options like: padding-left, padding-right, padding-bottom, padding-top. */

    margin: 50px 25px;              /* Here we use margin to make distance from the other content's and to look better . we can give margin from any 
                               specific direction also by selecting options like: margin-left, margin-right, margin-top, margin-bottom.
                               here when there are two values in margin, then first value will be allocated to the top & bottom
                                and second value will be allocated to the left & right . If there are three values , then first value is 
                                allocated to the top and last value is allocated to the bottom and second value will be allocated to 
                                left & right . if there are 4 values in border-width, the first value goes to top and second value goes to 
                                the right and third value goes to the bottom and last value goes to the left. */
    
    box-sizing: border-box;   /* here box-sizing enables you to define how you want the height and width of an element to be calculated.
                               when we choose the option box-sizing: border-box; the width & height we gave will not be allocated to the 
                               content, it will be allocated to the complete box and by removing the padding value & border value & margin value;
                               the width & height of the content box will calculated. But incase of the box-sizing: content-box; the width & height
                               we gave will be allocated to the content box only . the width & height of the complete box will calculated by adding 
                               the values of padding , border to the width & height of the content box. Generally we uses the option 
                               box-sizing: border-box while writing the code. Here in border-box, there will be no effect on the content box
                               when we change the size of the margin. the width & height of the content box remains same when we made changes in the 
                               margin , but the width and height of the content box will be changed, when we make changes on the padding & border boxes.
                               Here the difference between the border-box & content-box : the height & width of the content box is not fixed , 
                                but the height & width of the border-box is fixed. the content-box will be expanded when we add the padding, border;
                                but the border-box won't be expanded when we add padding or border. */
                                


}