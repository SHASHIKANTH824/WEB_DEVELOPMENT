

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    height: 100vh;
    width: 100vw;
}

.container{
    padding: 5rem;
    height: 100%;
    width: 100%;
    background-color: rgb(136, 122, 122);
    display: grid;
    
    /* here by using the "grid-template-rows: 200px 200px;" we get the two rows of each 200px height of parent element and here boxes will be
     arranged in this rows and columns automatically one by one */  
    /* here by using the "grid-template-columns: 200px 200px 200px;" we get the three columns of each 200px width of parent element. */
    
    grid-template-columns: 1fr 1fr 1fr;   /* "grid-template-columns: 1fr 1fr 1fr;" here the container will be divided into three eqaul columns
                                             by occupuying total width . here if we give 2fr inplace of 1fr for box2 (that is for second one), then 
                                              the total length will be divided into 4 eqaul parts and the box 1 will get 1 part and box 2 will get
                                              2 parts and box3 will get 1 part of total length of the container (i.e parent element). */ 

    grid-template-rows: 1fr 1fr;          /* "grid-template-columns: 1fr 1fr;" here the container will be divided into two eqaul rows by
                                              occupuying total height of the container (i.e parent element). */

    gap: 1rem;                           /*  here the "gap: 1 rem;" will provide the  gap of 1 rem between the grid items (boxes) row-wise and column-wise . */
    row-gap: 1rem;                       /* here the "row-gap: 1rem;" will provide the gap of 1 rem between the rows of the grid items (boxes). */
    column-gap: 1rem;                    /* here the "column-gap: 1rem;" will provide the gap of 1 rem between the colums of the grid items (boxes). */                    
}

.box{
    font-size: 2rem;
    background-color: orange;
    border: 0.5rem solid black;
}
